#!/bin/sh
set -xa

########################################
# NOS_OFS_AWS  for development work only 
########################################
export HOMEnos=${HOMEnos:-${PACKAGEROOT}/nosofs.${nosofs_ver:?}}
######################################################
# The following two variable could be defined in the
# loadleveler submission script (the sms script), if
# not they will take the default values which is set
# for the NCO running enviroment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-nco}

###################################
# Specify NET and RUN Name and model
####################################
export OFS=${OFS}
export NET=${NET:-nos}
export RUN=${RUN:-$OFS}
export platform=${platform:-H1}
###############################################################
# This block can be modified for different Production test
# environment. This is used for operational testings
###############################################################
export COMROOT=${COMROOT:-/lfs/h1/ops/prod/com}
export DCOMROOT=${DCOMROOT:-/lfs/h1/ops/prod/dcom}

export PS4='$SECONDS + '
date

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATAROOT=${DATAROOT:-/lfs/h1/ops/prod/tmp}
#export DATA=${DATA:-$DATAROOT/${job}.${pid}}
export DATA=${DATA:-${DATAROOT:?}/nos_${OFS}_aws_${cyc}_$envir}
#if [ $envir = prod ]; then
#  rm -rf ${DATAROOT}/*  
#fi
if [ ! -d $DATA ]
then
  mkdir -p $DATA
  cd $DATA
else
  cd $DATA
  rm -fr $DATA/*
fi
export cycle=t${cyc}z

############################################
#   Determine Job Output Name on System
############################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

####################################
# Specify Execution Areas
####################################
export EXECnos=${EXECnos:-${HOMEnos}/exec}
export PARMnos=${PARMnos:-${HOMEnos}/parm}
export USHnos=${USHnos:-${HOMEnos}/ush}
export SCRIPTSnos=${SCRIPTSnos:-${HOMEnos}/scripts}
export FIXnos=${FIXnos:-${HOMEnos}/fix/shared}
export FIXofs=${FIXofs:-${HOMEnos}/fix/${OFS}}

###########################################
# Run setpdy and initialize PDY variables
###########################################
sh setpdy.sh
. ./PDY
#export PDY=20210824
##############################################
# Define COM directories
##############################################

#export COMIN=${COMIN:-${COMROOT}/${NET}/${nosofs_ver:0:4}/${RUN}.${PDY}}   # input directory
#export COMOUTroot=${COMOUTroot:-${COMROOT}/${NET}/${nosofs_ver:0:4}}       # output directory
#export COMOUT=${COMOUT:-${COMROOT}/${NET}/${nosofs_ver:0:4}/${RUN}.${PDY}}  # output directory

if [ $envir == "dev" ]; then
    export COMROOT=/lfs/h1/nos/ptmp/$LOGNAME/com
    export COMOUTroot=${COMOUTroot:-${COMROOT}/${NET}/${nosofs_ver:0:4}}       # output directory
    export COMOUT=${COMOUT:-${COMROOT}/${NET}/${nosofs_ver:0:4}/${RUN}.${PDY}}  # output directory
elif [ $envir == "prod" ]; then
    export COMROOT=/lfs/h1/ops/prod/com
    export COMOUTroot=${COMOUTroot:-${COMROOT}/glofs/v2.1}       # output directory
    export COMOUT=${COMOUT:-${COMROOT}/glofs/v2.1/${RUN}.${PDY}}  # output directory
fi


#export COMOUTcorms=${COMOUTcorms:-${COMOUTroot}/${RUN}.${PDY}}      # output directory
#mkdir -m 775 -p $COMOUT $COMOUTcorms

####  Log File To Sys Report  
##################################################################
#export nosjlogfile=${COMOUT}/${NET}.${RUN}.jlogfile.${PDY}.${cycle}.log 
####  Log File To COMOUTcorms
#export cormslogfile=${COMOUT}/${NET}.${RUN}.corms.${PDY}.${cycle}.log

#if [ -s $nosjlogfile ]; then
#  cp -p $COMOUT/*jlogfile.${PDY}.t${cyc]z.log  $DATA/.
#fi
#if [ -s $cormslogfile ]; then
#  cp -p $cormslogfile $DATA/.
#fi

cp -p $COMOUT/*jlogfile.${PDY}.${cycle}.log  $DATA/.
cp -p $COMOUT/*corms.${PDY}.${cycle}.log  $DATA/.
cp -p $COMOUT/*.${PDY}.${cycle}.nc  $DATA/.
cp -p $COMOUT/*.rst.nowcast.${PDY}.${cycle}.bin  $DATA/.

tarfile=${OFS}.${PDY}${cyc}.${envir}.wcoss2.tar
tar -cf $DATAROOT/$tarfile glofs*${PDY}.${cycle}*
aws s3 cp ${DATAROOT}/${tarfile} s3://co-ops.nceptransfer/${tarfile}
export err=$?
if [ $err -ne 0 ]
then
  echo "File transfer to AWS did not complete normally"
  msg="File transfer to AWS did not complete normally"
# postmsg "$jlogfile" "$msg"
  echo "AWS NOWCAST/FORECAST DONE 0" # >> $cormslogfile
else
  echo "File transfer to AWS completed normally"
 msg="File transfer to AWS completed normally"
 #postmsg "$jlogfile" "$msg"
  echo "AWS NOWCAST/FORECAST DONE 100" # >> $cormslogfile
fi
mv  ${DATAROOT}/${tarfile} $DATA/.


########################################################
# Execute the script.
########################################################
#   echo "push model data to CO-OPS ftp server of tidepool"
#  $HOMEnos/ush/nos_ofs_aws_wcoss.sh
########################################################

cat $pgmout

msg="ENDED NORMALLY."
postmsg "$nosjlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
#cd $DATA_IN
#rm -rf ${DATA}
echo jobid=$jobid
if [ $envir == 'dev' ]; then
  RPTDIR=/lfs/h1/nos/ptmp/$LOGNAME/rpt/${nosofs_ver}
  cp -p ${RPTDIR}/${OFS}_aws_${cyc}.out ${RPTDIR}/${OFS}_aws_${cyc}.out.${}
  cp -p ${RPTDIR}/${OFS}_aws_${cyc}.err ${RPTDIR}/${OFS}_aws_${cyc}.err.${jobid}
elif [ $envir == 'prod' ]; then 
  RPTDIR=/lfs/h1/nos/ptmp/$LOGNAME/rpt/${nosofs_ver}
  cp -p ${RPTDIR}/${OFS}_aws_${cyc}_prod.out ${RPTDIR}/${OFS}_aws_${cyc}_prod.out.${jobid}
  cp -p ${RPTDIR}/${OFS}_aws_${cyc}_prod.err ${RPTDIR}/${OFS}_aws_${cyc}_prod.err.${jobid}  
fi

date


